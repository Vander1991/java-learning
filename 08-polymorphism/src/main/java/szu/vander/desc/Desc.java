package szu.vander.desc;
/**
* @author      : Vander
* @date        : 2018-11-12
* @description ：      将方法调用与方法主体关联起来称为绑定，若在程序执行前进行绑定（如果有的话，由编译器和连接程序实现）
* 				 叫做前期绑定。C语言默认就是这种方式。
* 				       像多态中的传入是一个父类引用，实际是子类对象时，编译器无法知道调用哪个方法才对，解决这个问题的方法就
* 				是后期绑定，也就是运行时根据对象的类型进行绑定，后期绑定也叫动态绑定或运行时绑定。
* 				  Java中除了static方法和final方法（private方法属于final方法）之外，其他所有的方法都是通过
* 				后期绑定的
* 				  多态是一项让程序员“将改变的事物与未来的事物分离开来”的重要技术
* 				  为了避免出现PolyContructor那样的情况，编写构造器的时候尽可能满足一条准则：
* 					“用尽可能简单的方法使对象进入正常状态；如果可以的话，避免调用其他方法。”在构造器内唯一能够安全
* 				调用的那些方法是基类的final方法（也适用于private方法，它自动属于final方法）
*/				  
public class Desc {

}
